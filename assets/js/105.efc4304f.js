(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{671:function(t,e,s){"use strict";s.r(e);var a=s(1),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),s("p",[t._v("补充知识：")]),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("结构化克隆算法")]),t._v(" "),s("p",[t._v("结构化克隆算法是由 HTML5 规范规定的用于拷贝复杂 JavaScript 对象的一种算法。")]),t._v(" "),s("p",[t._v("在通过 postmessage() 在 Workers 之间传送数据时或者在 indexDB 存储对象时，内部调用。")]),t._v(" "),s("p",[t._v("它通过递归输入对象创建克隆，同时保留一份之前访问过的引用的 map 映射，避免无限遍历循环。")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),s("p",[s("router-link",{attrs:{to:"./internal/baseClone.html"}},[t._v("baseClone")])],1)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"lodash-源码阅读-clone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodash-源码阅读-clone","aria-hidden":"true"}},[this._v("#")]),this._v(" lodash 源码阅读-clone")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"源码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码","aria-hidden":"true"}},[this._v("#")]),this._v(" 源码")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" baseClone "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./.internal/baseClone.js'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Used to compose bitmasks for cloning. */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLONE_SYMBOLS_FLAG")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. Object inheritance is preserved. An empty object is\n * returned for uncloneable values such as error objects, functions, DOM nodes,\n * and WeakMaps.\n *\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see cloneDeep\n * @example\n *\n * const objects = [{ 'a': 1 }, { 'b': 2 }]\n *\n * const shallow = clone(objects)\n * console.log(shallow[0] === objects[0])\n * // => true\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("baseClone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLONE_SYMBOLS_FLAG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" clone\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"the-structured-clone-algorithm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-structured-clone-algorithm","aria-hidden":"true"}},[this._v("#")]),this._v(" The structured clone algorithm")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"不适用结构化克隆算法的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不适用结构化克隆算法的","aria-hidden":"true"}},[this._v("#")]),this._v(" 不适用结构化克隆算法的")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Error 和 Function 对象不能通过结构化克隆算法复制。否则会抛出 "),s("code",[t._v("DATA_CLONE_ERR")]),t._v(" 的错误。")]),t._v(" "),s("li",[t._v("克隆 DOM 节点也会抛出类似 "),s("code",[t._v("DATA_CLONE_ERR")]),t._v(" 这样的错误。")]),t._v(" "),s("li",[t._v("对象的某些参数不会被保留：\n"),s("ul",[s("li",[t._v("正则 RegExp 的 lastIndex 字段不会被保留")]),t._v(" "),s("li",[t._v("属性描述器(property descriptors)、setters、getters（以及类元数据特征）不会被复制。比如一个对象通过属性描述器标记为 只读（read-only），复制后会变成可读可写（read-write），因为这是默认设置。")]),t._v(" "),s("li",[t._v("原型链不会被复制")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"支持的类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#支持的类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 支持的类型")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("对象类型")]),t._v(" "),s("th",[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("所有的原始类型")]),t._v(" "),s("td",[t._v("不包含 symbols")])]),t._v(" "),s("tr",[s("td",[t._v("布尔对象(Boolean)")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("String 对象")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Date")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("RegExp")]),t._v(" "),s("td",[t._v("lastIndex 字段不会保留")])]),t._v(" "),s("tr",[s("td",[t._v("Blob")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("File")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("FileList")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("ArrayBuffer")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("ArrayBufferView")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("ImageBitmap")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("ImageData")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Array")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Object")]),t._v(" "),s("td",[t._v("仅包括纯对象(使用 {} 或 new Object 创建的对象)")])]),t._v(" "),s("tr",[s("td",[t._v("Map")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("Set")]),t._v(" "),s("td")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"baseclone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#baseclone","aria-hidden":"true"}},[this._v("#")]),this._v(" baseClone")])}],!1,null,null,null);e.default=r.exports}}]);